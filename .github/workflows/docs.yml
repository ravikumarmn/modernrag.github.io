name: Deploy Documentation

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material
          pip install -r requirements.txt
      
      - name: Generate API documentation
        run: |
          mkdir -p docs
          echo "# ModernRAG API Reference" > docs/index.md
          echo "## Vector Store" > docs/vector_store.md
          python -c "import inspect; from modernrag.vector_store import * ; print(inspect.getsource(VectorStoreConfig))" >> docs/vector_store.md
          echo "## Generation" > docs/generation.md
          python -c "import inspect; from modernrag.generation import retrieve_augment_generate; print(inspect.getsource(retrieve_augment_generate))" >> docs/generation.md
          echo "## Caching" > docs/caching.md
          python -c "import inspect; from modernrag.caching import * ; print(inspect.getsource(CacheConfig))" >> docs/caching.md
          
          # Create mkdocs.yml
          cat > mkdocs.yml << EOF
          site_name: ModernRAG Documentation
          theme:
            name: material
            palette:
              primary: blue
          nav:
            - Home: index.md
            - API Reference:
                - Vector Store: vector_store.md
                - Generation: generation.md
                - Caching: caching.md
          EOF
      
      - name: Build documentation
        run: mkdocs build
      
      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'site'
  
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
